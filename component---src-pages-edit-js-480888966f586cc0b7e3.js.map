{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/edit.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","PropTypes","object","string","isRequired","func","EditPage","react_default","a","createElement","layout","gatsby_link_default","to","search_query","Consumer","context","onSubmit","e","preventDefault","_e$target","target","nameElement","queryElement","newState","concat","state","id","Date","now","name","value","query","setSate","saveData","type","placeholder","rows","length","map","data","key","onClick","filter","s","onRemove","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Layout","_ref","children","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname"],"mappings":"oKAa2BA,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,kCCJPC,UA5DE,WAoBf,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAMI,GAAG,KAAT,SACLL,EAAAC,EAAAC,cAACI,EAAA,EAAmBC,SAApB,KACI,SAAAC,GAAO,OACPR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMO,SAAU,SAAAC,GAAC,OAzBV,SAACA,EAAGF,GACnBE,EAAEC,iBAD6B,IAAAC,EAGKF,EAAEG,OAA/BC,EAHwBF,EAAA,GAGXG,EAHWH,EAAA,GAIzBI,EAAQ,GAAAC,OAAOT,EAAQU,MAAf,CAAsB,CAAEC,GAAIC,KAAKC,MAAOC,KAAMR,EAAYS,MAAOC,MAAOT,EAAaQ,SACnGf,EAAQiB,QAAQT,GAChBU,YAASV,GACTF,EAAYS,MAAQ,GACpBR,EAAaQ,MAAQ,GAiBQd,CAASC,EAAGF,KAC/BR,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,OAAOL,KAAK,OAAOM,YAAY,sBAG7C5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YAAU2B,KAAK,IAAIP,KAAK,QAAQM,YAAY,wBAE9C5B,EAAAC,EAAAC,cAAA,wBAGJF,EAAAC,EAAAC,cAAA,aACKM,EAAQU,MAAMY,QACf9B,EAAAC,EAAAC,cAAA,UACGM,EAAQU,MAAMa,IAAI,SAAAC,GAAI,OACrBhC,EAAAC,EAAAC,cAAA,MAAI+B,IAAKD,EAAKb,IAAKa,EAAKV,KAAxB,MAAiCU,EAAKR,MAAtC,IAA6CxB,EAAAC,EAAAC,cAAA,UAAQgC,QAAS,SAAAxB,GAAC,OApChE,SAACA,EAAGF,EAASwB,GAC5BtB,EAAEC,iBAEF,IAAMK,EAAQ,GAAAC,OAAOT,EAAQU,MAAMiB,OAAO,SAAAC,GAAC,OAAIA,EAAEjB,KAAOa,EAAKb,MAC7DX,EAAQiB,QAAQT,GAChBU,YAASV,GA+B0EqB,CAAS3B,EAAGF,EAASwB,KAA3C,iDCvDjE,IAAAM,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAaeI,IAJA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbJ,EAAAvC,EAAAC,cAAA,YAAO0C,yBCVT,IAAAC,EAASN,EAAQ,IAAcO,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkBR,EAAQ,KAAgBM,EAAAE,EAH1C,OAG0C,CAC1CI,cAAA,EACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAJ,GAAA,GACK,MAAAxC,GACL,kCCZA,IAAsB6C,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6FCKzCK,EAAmB,SAAAjB,GAAiC,IAA9BkB,EAA8BlB,EAA9BkB,SAAUC,EAAoBnB,EAApBmB,cACpC,OAAKA,EAGEtE,IAAMU,cAAc6D,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBO,UAAY,CAC3BN,SAAUnE,IAAU0E,MAAM,CACxBC,SAAU3E,IAAUE,OAAOC,aAC1BA,YAGU+D","file":"component---src-pages-edit-js-480888966f586cc0b7e3.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport { searchQueryContext } from '../lib/search-query'\nimport { saveData } from '../lib/storage'\n\nconst EditPage = () => {\n  const onSubmit = (e, context) => {\n    e.preventDefault()\n\n    const [nameElement, queryElement] = e.target\n    const newState = [...context.state, { id: Date.now(), name: nameElement.value, query: queryElement.value }]\n    context.setSate(newState)\n    saveData(newState)\n    nameElement.value = ''\n    queryElement.value = ''\n  }\n\n  const onRemove = (e, context, data) => {\n    e.preventDefault()\n\n    const newState = [...context.state.filter(s => s.id !== data.id)]\n    context.setSate(newState)\n    saveData(newState)\n  }\n\n  return (\n    <Layout>\n      <div><Link to=\"/\">Home</Link></div>\n      <searchQueryContext.Consumer>\n        { context => (\n          <div>\n            <form onSubmit={e => onSubmit(e, context)}>\n              <label>\n                <div>\n                  <strong>Query Name</strong>\n                </div>\n                <div>\n                  <input type=\"text\" name=\"name\" placeholder=\"my pull requests\" />\n                </div>\n\n                <div>\n                  <strong>Query String</strong>\n                </div>\n                <div>\n                  <textarea rows=\"3\" name=\"query\" placeholder=\"e.g. is:pr is:open\" />\n                </div>\n                <button>save</button>\n              </label>\n            </form>\n            <div>\n              {!!context.state.length && (\n                <ul>\n                  {context.state.map(data => (\n                    <li key={data.id}>{data.name} / {data.query} <button onClick={e => onRemove(e, context, data)}>x</button></li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n        )}\n      </searchQueryContext.Consumer>\n    </Layout>\n  )\n}\n\nexport default EditPage\n\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\n\nconst Layout = ({ children }) => (\n  <main>{children}</main>\n)\n\nexport default Layout\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}