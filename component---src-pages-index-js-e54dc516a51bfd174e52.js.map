{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./src/components/WorkSpaceFormDialog.js","webpack:///./src/pages/index.js"],"names":["SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","forwardRef","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","root","createElement","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","paddingBottom","WorkSpaceFormDialog","open","setClose","onSubmit","workSpace","title","onClose","fullWidth","noValidate","autoComplete","e","label","required","defaultValue","onClick","color","type","useStyles","makeStyles","minHeight","addIcon","position","bottom","right","zIndex","useContext","workSpaceState","setWorkSpaceState","form","setForm","useState","anchorEl","setAnchorEl","handleClick","event","handleClose","openForm","saveData","ws","id","action","keepMounted","Boolean","to","q","variant"],"mappings":"mVAuBIA,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA4CnE,SAASC,EAAUC,GACjB,IAAIC,EAAMC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC1EG,EAAQC,WAAWN,GACvB,MAAO,GAAGO,OAAOF,EAAQJ,GAAKM,OAAOC,OAAOR,GAAKS,QAAQD,OAAOH,GAAQ,KAAO,MA6B1E,IA6HH,EAAO,IAAMK,YAAW,SAAcC,EAAOC,GAC/C,IAAIC,EAAsBF,EAAMG,aAC5BA,OAAuC,IAAxBD,EAAiC,UAAYA,EAC5DE,EAAoBJ,EAAMK,WAC1BA,OAAmC,IAAtBD,EAA+B,UAAYA,EACxDE,EAAUN,EAAMM,QAChBC,EAAgBP,EAAMQ,UACtBC,EAAmBT,EAAMU,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAmBZ,EAAMa,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAmBd,EAAMe,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAchB,EAAMiB,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAiBlB,EAAMmB,QACvBA,OAA6B,IAAnBD,EAA4B,aAAeA,EACrDE,EAAYpB,EAAMqB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYtB,EAAMuB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYxB,EAAMyB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAiB1B,EAAM2B,QACvBA,OAA6B,IAAnBD,EAA4B,EAAIA,EAC1CE,EAAc5B,EAAM6B,KACpBA,OAAuB,IAAhBD,EAAyB,OAASA,EACzCE,EAAY9B,EAAM+B,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYhC,EAAMiC,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAsBlC,EAAMmC,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAQ,YAAyBpC,EAAO,CAAC,eAAgB,aAAc,UAAW,YAAa,YAAa,YAAa,YAAa,OAAQ,UAAW,KAAM,KAAM,KAAM,UAAW,OAAQ,KAAM,KAAM,iBAE1MQ,EAAY,YAAKF,EAAQ+B,KAAM9B,EAAeM,GAAa,CAACP,EAAQO,UAAuB,IAAZc,GAAiBrB,EAAQ,cAAcV,OAAOC,OAAO8B,MAAaV,GAAQX,EAAQW,KAAMkB,GAAgB7B,EAAQ6B,aAA4B,QAAdpB,GAAuBT,EAAQ,gBAAgBV,OAAOC,OAAOkB,KAAuB,SAATc,GAAmBvB,EAAQ,WAAWV,OAAOC,OAAOgC,KAAwB,YAAfxB,GAA4BC,EAAQ,kBAAkBV,OAAOC,OAAOQ,KAAgC,YAAjBF,GAA8BG,EAAQ,oBAAoBV,OAAOC,OAAOM,KAA6B,eAAZgB,GAA4Bb,EAAQ,cAAcV,OAAOC,OAAOsB,MAAmB,IAAPc,GAAgB3B,EAAQ,WAAWV,OAAOC,OAAOoC,MAAc,IAAPR,GAAgBnB,EAAQ,WAAWV,OAAOC,OAAO4B,MAAc,IAAPF,GAAgBjB,EAAQ,WAAWV,OAAOC,OAAO0B,MAAc,IAAPF,GAAgBf,EAAQ,WAAWV,OAAOC,OAAOwB,MAAc,IAAPU,GAAgBzB,EAAQ,WAAWV,OAAOC,OAAOkC,MACl2B,OAAO,IAAMO,cAAc3B,EAAW,YAAS,CAC7CH,UAAWA,EACXP,IAAKA,GACJmC,OAkIU,EArBE,OAAAG,EAAA,IAjRG,SAAgBC,GAClC,OAAO,YAAS,CAEdH,KAAM,GAGNxB,UAAW,CACT4B,UAAW,aACXC,QAAS,OACTC,SAAU,OACVC,MAAO,QAIT3B,KAAM,CACJwB,UAAW,aACXI,OAAQ,KAKVV,aAAc,CACZW,SAAU,GAIZ,sBAAuB,CACrBC,cAAe,UAIjB,8BAA+B,CAC7BA,cAAe,kBAIjB,2BAA4B,CAC1BA,cAAe,eAIjB,iBAAkB,CAChBJ,SAAU,UAIZ,uBAAwB,CACtBA,SAAU,gBAIZ,wBAAyB,CACvBtC,WAAY,UAId,4BAA6B,CAC3BA,WAAY,cAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBF,aAAc,UAIhB,8BAA+B,CAC7BA,aAAc,cAIhB,4BAA6B,CAC3BA,aAAc,YAIhB,iCAAkC,CAChCA,aAAc,iBAIhB,gCAAiC,CAC/BA,aAAc,gBAIhB,oBAAqB,CACnB6C,eAAgB,UAIlB,sBAAuB,CACrBA,eAAgB,YAIlB,2BAA4B,CAC1BA,eAAgB,iBAIlB,0BAA2B,CACzBA,eAAgB,gBAIlB,0BAA2B,CACzBA,eAAgB,iBA/ItB,SAAwBR,EAAOS,GAC7B,IAAIC,EAAS,GAgBb,OAfAhE,EAASiE,SAAQ,SAAUxB,GACzB,IAAIyB,EAAeZ,EAAMb,QAAQA,GAEZ,IAAjByB,IAIJF,EAAO,WAAWtD,OAAOqD,EAAY,KAAKrD,OAAO+B,IAAY,CAC3DkB,OAAQ,IAAIjD,OAAOR,EAAUgE,EAAc,IAC3CR,MAAO,eAAehD,OAAOR,EAAUgE,GAAe,KACtD,YAAa,CACXC,QAASjE,EAAUgE,EAAc,SAIhCF,EAgIJI,CAAed,EAAO,MAAO,GAAIA,EAAMe,YAAYC,KAAKC,QAAO,SAAUC,EAAaC,GAGvF,OApMJ,SAAsBC,EAAcpB,EAAOS,GACzC,IAAIC,EAAS,GACb/D,EAAWgE,SAAQ,SAAUU,GAC3B,IAAIF,EAAM,QAAQ/D,OAAOqD,EAAY,KAAKrD,OAAOiE,GAEjD,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAIjB,EAAQ,GAAGhD,OAAOkE,KAAKC,MAAMF,EAAO,GAAK,KAAQ,IAAM,KAG3DX,EAAOS,GAAO,CACZK,UAAWpB,EACXqB,SAAU,EACVC,SAAUtB,QAfVM,EAAOS,GAAO,CACZK,UAAW,OACXC,SAAU,EACVC,SAAU,aAZZhB,EAAOS,GAAO,CACZK,UAAW,EACXC,SAAU,EACVC,SAAU,WAyBG,OAAfjB,EACF,YAASW,EAAcV,GAEvBU,EAAapB,EAAMe,YAAYY,GAAGlB,IAAeC,EA6JjDkB,CAAaV,EAAalB,EAAOmB,GAC1BD,IACN,OAsJ+B,CAClCW,KAAM,WADS,CAEd,G,wBCxWC,EAAc,IAAMtE,YAAW,SAAqBC,EAAOC,GAC7D,IAAIK,EAAUN,EAAMM,QAChBE,EAAYR,EAAMQ,UAClBC,EAAmBT,EAAMU,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClD2B,EAAQ,YAAyBpC,EAAO,CAAC,UAAW,YAAa,cAErE,OAAO,IAAMsC,cAAc3B,EAAW,YAAS,CAC7CH,UAAW,YAAKF,EAAQ+B,KAAM7B,GAC9BP,IAAKA,GACJmC,OAyBU,SAAAG,EAAA,GA5CK,CAElBF,KAAM,CACJgB,QAAS,GACT,eAAgB,CACdiB,cAAe,MAuCa,CAChCD,KAAM,kBADO,CAEZ,G,oIC5CY,SAASE,EAAoB,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,UAAWN,EAAO,EAAPA,KAE3EO,IADN,EACoB,iBAApB,mBAWA,OACE,uBAAQJ,KAAR,EAAoBK,QAApB,EAAuCC,WAAvC,EAAiDZ,SAAS,MACxD,0BAAMa,YAAN,EAAiBC,aAAjB,MAAoCN,SAXzB,SAAAO,GACbA,mBACA,IACMZ,EADcY,4BAApB,QACA,MACAP,EAAS,CAACC,UAAD,EAAYN,SAErBI,MAMI,2BADF,GAEE,2BACE,uBACEJ,KADF,OAEEa,MAFF,iBAGEJ,WAHF,EAIEK,UAJF,EAKEC,aAAcf,KAGlB,2BACE,uBAAQgB,QAAR,EAA2BC,MAAM,WADnC,UAIE,uBAAQA,MAAR,UAAwBC,KAAK,UAjBrC,a,mbCAF,IAAMC,EAAYC,aAAW,iBAAO,CAClCxE,KAAM,CACJyE,UAAW,KAEbC,QAAS,CACPC,SADO,QAEPC,OAFO,GAGPC,MAHO,IAIPC,OAAQ,OA4EZ,UAxEc,WAAO,IAAD,EAC4BC,qBAD5B,KACVC,EADU,iBACMC,EADN,sBAEM,aAAe,CAAE1B,MAAF,EAAeH,KAAf,KAA2BM,UAAW,OAAtEwB,EAFW,KAELC,EAFK,KAGZ9F,EAAUkF,IAHE,EAKca,mBALd,MAKXC,EALW,KAKDC,EALC,KAMZC,EAAc,SAAAC,GAAK,OAAIF,EAAYE,EAAhB,gBACnBC,EAAc,kBAAMH,EAAN,OAEdI,EAAW,SAAC,GAAD,IAAEhC,EAAF,YAAaN,EAAb,cAAuB+B,EAAQ,CAAC5B,MAAD,EAAaG,UAAb,EAAwBN,UAiBxE,OACE,2BACE,wCAA+BI,SAlBjB,kBAAM2B,EAAQ,OAAD,aAAW5B,MAAM,MAkBQE,SAjBrC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,UAAWN,EAAU,EAAVA,KAC9B,EACEM,YAEAuB,EAAkB,GAAD,aAAqB,IAAI,EAAJ,EAAc,CAAC7B,YAEvDqC,IACAE,mBAWE,uBAAKtB,MAAL,YAAuB9E,UAAWF,EAAlC,QAAmD+E,QAASsB,GAC1D,sBAHJ,OAKE,uBAAWzC,SAAS,MAClB,qBAAMrD,WAAN,EAAgBc,QAAS,GACtBsE,EAAA,KAAmB,SAAAY,GAAE,OACpB,qBAAM5F,MAAN,EAAWgB,GAAX,EAAkBR,GAAlB,EAAyBkC,IAAKkD,EAAGC,IAC/B,2BACE,uBACEC,OACE,oCACE,uBAAY1B,QAASmB,GACnB,sBAFJ,OAIE,uBAAMF,SAAN,EAA0BU,aAA1B,EAAsCxC,KAAMyC,QAA5C,GAA+DpC,QAAS6B,GACtE,uBAAUrB,QAAS,kBAAMsB,EAAS,CAAChC,UAAD,EAAgBN,KAAMwC,EAAGxC,SAD7D,QAEE,uBAAUgB,QAAS,kBAzBtBV,EAyBsB,EAxBvCuB,EAAkB,EAAID,EAAA,QAAsB,SAAAY,GAAE,OAAIA,OAAUlC,EAAd,QAC9C+B,SACAE,eAHiB,IAAAjC,IAiBL,YAYEC,MAAOiC,EAAGxC,OAEZ,uBAAgB6C,GAAE,cAAgBL,EAAGC,IACnC,qBAAatG,UAAWF,EAAQW,MAC7B4F,iBACG,4BACEA,EAAA,aAAe,SAAAM,GAAC,OAChB,uBAAYxD,IAAKwD,EAAjB,GAAuBC,QAAvB,QAAuC9B,MAAvC,gBAA6D5E,UAAU,MAAMyG,EAD7D,UArBV","file":"component---src-pages-index-js-e54dc516a51bfd174e52.js","sourcesContent":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function WorkSpaceFormDialog({ open, setClose, onSubmit, workSpace, name}) {\n  const isEdit = !!name\n  const title = isEdit ? 'Edit WorkSpace' : 'Create WorkSpace'\n\n  const submit = e => {\n    e.preventDefault()\n    const nameElement = e.target.elements.namedItem('name')\n    const name = nameElement.value\n    onSubmit({workSpace, name})\n\n    setClose()\n  }\n\n  return (\n    <Dialog open={open} onClose={setClose} fullWidth maxWidth=\"sm\">\n      <form noValidate autoComplete=\"off\" onSubmit={submit}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <TextField\n            name=\"name\"\n            label=\"WorkSpace name\"\n            fullWidth\n            required\n            defaultValue={name}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={setClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, {useContext, useState} from 'react'\nimport Layout from '../components/Layout'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { CardActionArea } from 'gatsby-theme-material-ui'\nimport {WorkSpace, workSpaceContext} from '../lib/workspace'\nimport WorkSpaceFormDialog from '../components/WorkSpaceFormDialog'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport {saveData} from '../lib/storage'\n\n\nconst useStyles = makeStyles(() => ({\n  item: {\n    minHeight: 200\n  },\n  addIcon: {\n    position: 'fixed',\n    bottom: 50,\n    right: 100,\n    zIndex: 1\n  }\n}));\n\nconst Index = () => {\n  const { workSpaceState, setWorkSpaceState } = useContext(workSpaceContext)\n  const [form, setForm] = React.useState({ open: false, name: null, workSpace: null});\n  const classes = useStyles()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const handleClick = event => setAnchorEl(event.currentTarget)\n  const handleClose = () => setAnchorEl(null)\n\n  const openForm = ({workSpace, name}) => setForm({open: true, workSpace, name})\n  const closeForm = () => setForm({...form, open: false})\n  const submitForm = ({workSpace, name}) => {\n    if (workSpace) {\n      workSpace.update(name)\n    } else {\n      setWorkSpaceState([...workSpaceState, new WorkSpace({name})])\n    }\n    handleClose()\n    saveData(workSpaceState)\n  }\n  const removeForm = workSpace => {\n    setWorkSpaceState([...workSpaceState.filter(ws => ws.id !== workSpace.id)])\n    handleClose()\n    saveData(workSpaceState)\n  }\n\n  return (\n    <Layout>\n      <WorkSpaceFormDialog {...form} setClose={closeForm} onSubmit={submitForm}/>\n      <Fab color=\"secondary\" className={classes.addIcon} onClick={openForm}>\n        <AddIcon />\n      </Fab>\n      <Container maxWidth=\"md\">\n        <Grid container spacing={3}>\n          {workSpaceState.map(ws => (\n            <Grid item xs={6} sm={4} key={ws.id}>\n              <Card>\n                <CardHeader\n                  action={\n                    <>\n                      <IconButton onClick={handleClick}>\n                        <MoreVertIcon />\n                      </IconButton>\n                      <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n                        <MenuItem onClick={() => openForm({workSpace: ws, name: ws.name})}>Edit</MenuItem>\n                        <MenuItem onClick={() => removeForm(ws)}>Remove</MenuItem>\n                      </Menu>\n                    </>\n                  }\n                  title={ws.name}\n                />\n                <CardActionArea to={`/workspace/${ws.id}`}>\n                  <CardContent className={classes.item}>\n                    {ws.queries.length\n                      ? <ul>\n                        { ws.queries.map(q => (\n                          <Typography key={q.id} variant=\"body2\" color=\"textSecondary\" component=\"li\">{q.name}</Typography>\n                        )) }\n                      </ul>\n                      : null\n                    }\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Index\n"],"sourceRoot":""}